#=================================================================#
# Template file: KafkaPlugin.template

include "ADBase.template"

record(longout, "$(P)$(R)CurrentMessageOffset") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_CURRENT_OFFSET")
}

record(longin, "$(P)$(R)CurrentMessageOffset_RBV") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_CURRENT_OFFSET")
    field(SCAN, "I/O Intr")		#Update value on interrupt
}

record(longin, "$(P)$(R)KafkaMaxMessageSize_RBV") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_MAX_MSG_SIZE")
	field(SCAN, "I/O Intr")		#Update value on interrupt
    field(EGU,  "byte")
}

record(mbbi, "$(P)$(R)ConnectionStatus_RBV") #Multi bit binary input
{
   field(DTYP, "asynInt32")	#Data type
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_CONNECTION_STATUS")
   field(ZRST, "Connected")
   field(ZRVL, "0")
   field(ONST, "Connecting")
   field(ONVL, "1")
   field(TWST, "Disconnected")
   field(TWVL, "2")
   field(THST, "Error")
   field(THVL, "3")
   field(SCAN, "I/O Intr")
}

record(mbbi, "$(P)$(R)StartMessageOffset_RBV") #Multi bit binary input
{
   field(DTYP, "asynInt32")	#Data type
   field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_SET_OFFSET")
   field(ZRST, "Beginning")
   field(ZRVL, "0")
   field(ONST, "Stored")
   field(ONVL, "1")
   field(TWST, "Manual")
   field(TWVL, "2")
   field(THST, "End")
   field(THVL, "3")
   field(SCAN, "I/O Intr")
}

record(mbbo, "$(P)$(R)StartMessageOffset") #Multi bit binary input
{
   field(DTYP, "asynInt32")	#Data type
   field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_SET_OFFSET")
   field(ZRST, "Beginning")
   field(ZRVL, "0")
   field(ONST, "Stored")
   field(ONVL, "1")
   field(TWST, "Manual")
   field(TWVL, "2")
   field(THST, "End")
   field(THVL, "3")
}

record(stringin, "$(P)$(R)ConnectionMessage_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_CONNECTION_MESSAGE")
    field(SCAN, "I/O Intr")	#Update value on interrupt
}

record(stringout, "$(P)$(R)KafkaBrokerAddress")
{
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_BROKER_ADDRESS")
    field(PINI, "NO")
}

record(stringin, "$(P)$(R)KafkaBrokerAddress_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_BROKER_ADDRESS")
    field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)KafkaTopic")
{
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_TOPIC")
    field(PINI, "NO")
}

record(stringin, "$(P)$(R)KafkaTopic_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_TOPIC")
    field(SCAN, "I/O Intr")
}

record(stringout, "$(P)$(R)KafkaGroup")
{
    field(DTYP, "asynOctetWrite")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_GROUP")
    field(PINI, "NO")
}

record(stringin, "$(P)$(R)KafkaGroup_RBV")
{
    field(DTYP, "asynOctetRead")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_GROUP")
	field(SCAN, "I/O Intr")
}

record(longout, "$(P)$(R)KafkaStatsIntervalTime") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_STATS_INT_MS")
    field(EGU,  "ms")
}

record(longin, "$(P)$(R)KafkaStatsIntervalTime_RBV") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_STATS_INT_MS")
    field(SCAN, "I/O Intr")		#Update value on interrupt
    field(EGU,  "ms")
}

record(longout, "$(P)$(R)KafkaMessageBufferSize") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_MSG_BUFFER_SIZE")
    field(EGU,  "kB")
}

record(longin, "$(P)$(R)KafkaMessageBufferSize_RBV") #Integer in from device
{
    field(DTYP, "asynInt32")	#Data type
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))KAFKA_MSG_BUFFER_SIZE")
    field(SCAN, "I/O Intr")		#Update value on interrupt
    field(EGU,  "kB")
}
